<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lihongda&#39;s Blog</title>
  
  <subtitle>纸上得来终觉浅，绝知此事要躬行</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lihongda.net/"/>
  <updated>2018-08-27T07:07:16.283Z</updated>
  <id>http://lihongda.net/</id>
  
  <author>
    <name>Hong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iptables3</title>
    <link href="http://lihongda.net/2018/08/27/iptables3/"/>
    <id>http://lihongda.net/2018/08/27/iptables3/</id>
    <published>2018-08-26T16:00:00.000Z</published>
    <updated>2018-08-27T07:07:16.283Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2018/08/27/iptables3/防火墙.jpg" alt="防火墙"></p><a id="more"></a><h2 id="iptables命令"><a href="#iptables命令" class="headerlink" title="iptables命令"></a>iptables命令</h2><h4 id="匹配条件"><a href="#匹配条件" class="headerlink" title="匹配条件"></a>匹配条件</h4><ul><li>基本：通用的，PARAMETERS</li><li>扩展：需加载模块，MATCH EXTENTIONS</li></ul><p>1、 基本匹配条件：无需加载模块，由iptables/netfilter自行提供  </p><p><code>-s,--source address[/mask]</code>: 源ip地址或范围<br><code>-d, --destination address[/mask][,...]</code>：目标IP地址或范围<br><code>-p, --protocol protocol</code>:指定协议，可使用数字如0（all）protocol: tcp, udp, icmp, icmpv6, udplite,esp, ah, sctp, mh or all 参看：/etc/protocols<br><code>-i, --in-interface name</code>:  报文流入的接口；只能应用于数据报文流入环节，只应用于<br>INPUT、FORWARD、PREROUTING链<br><code>-o, --out-interface name</code>:  报文流出的接口；只能应用于数据报文流出的环节，只应用<br>于FORWARD、OUTPUT、POSTROUTING链  </p><p>2、 扩展匹配条件：需要加载扩展模块（/usr/lib64/xtables/*.so），方可生效</p><p>  查看帮助 <code>man iptables-extensions</code> </p><ul><li><p>隐式扩展：在使用-p选项指明了特定的协议时，无需再用-m选项指明扩展模块的扩展<br>机制，不需要手动加载扩展模块  </p><ul><li>[!] –source-port, –sport port[:port]：匹配报文源端口,可为端口范围</li><li>[!] –destination-port,–dport port[:port]：匹配报文目标端口,可为范围</li><li>[!] –tcp-flags mask comp<br>mask 需检查的标志位列表，用,分隔 例如 SYN,ACK,FIN,RST<br>comp 在mask列表中必须为1的标志位列表，无指定则必须为0，用,分隔<br>示例：<br>–tcp-flags SYN,ACK,FIN,RST SYN 表示要检查的标志位为<br>SYN,ACK,FIN,RST四个，其中SYN必须为1，余下的必须为0<br>–tcp-flags SYN,ACK,FIN,RST SYN,ACK<br>–tcp-flags ALL ALL<br>–tcp_flags ALL NONE<br>–syn：用于匹配第一次握手,相当于：–tcp-flags SYN,ACK,FIN,RST SYN</li></ul><h4 id="udp"><a href="#udp" class="headerlink" title="udp"></a>udp</h4><p>[!] –source-port, –sport port[:port]：匹配报文的源端口；可以是端口<br>范围<br>[!] –destination-port,–dport port[:port]：匹配报文的目标端口；可以<br>是端口范围</p><h4 id="icmp"><a href="#icmp" class="headerlink" title="icmp"></a>icmp</h4><p>[!] –icmp-type {type[/code]|typename}<br>type/code 0/0 echo-reply icmp应答 8/0 echo-request icmp请求</p></li><li><p>显式扩展：：必须使用-m选项指明要调用的扩展模块的扩展机制，要手动加载<br>扩展模块 [-m matchname [per-match-options]]<br>处理动作：-j targetname [per-target-option</p><ul><li>简单： ACCEPT，DROP</li><li>扩展： <ul><li>REJECT：–reject-with:icmp-port-unreachable默认</li><li>RETURN：返回调用链</li><li>REDIRECT：端口重定向</li><li>LOG：记录日志，</li><li>dmesgMARK：做防火墙标记</li><li>DNAT：目标地址转换</li><li>SNAT：源地址转换</li><li>MASQUERADE：地址伪装 或者自定义链    </li></ul></li></ul><p>使用帮助：<br>  CentOS 6: <code>man iptables</code><br>  CentOS 7: <code>man iptables-extensions</code>    </p></li></ul><p>1、 multiport扩展<br>    以离散方式定义多端口匹配,最多指定15个端口  </p><ul><li>[!] –source-ports,–sports port[,port|,port:port]…指定多个源端口</li><li>[!] –destination-ports,–dportsport[,port|,port:port]…指定多个目标端口</li><li>[!] –ports port[,port|,port:port]…多个源或目标端口</li></ul><p>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -s 172.16.0.0/16 -d 172.16.100.10 -p tcp -m multiport --dports 20:22,80 -j ACCEPT</span><br></pre></td></tr></table></figure></p><p>2、 iprange扩展  </p><pre><code>指明连续的（但一般不是整个网络）ip地址范围[!] --src-range from[-to] 源IP地址范围[!] --dst-range from[-to] 目标IP地址范围  </code></pre><p>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -d 172.16.1.100 -p tcp --dport 80 -m iprange --srcrange 172.16.1.5-172.16.1.10 -j DROP</span><br></pre></td></tr></table></figure></p><p>3、 mac扩展<br>    指明源MAC地址<br>    适用于：PREROUTING, FORWARD，INPUT chains<br>    [!] –mac-source XX:XX:XX:XX:XX:XX<br>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -s 172.16.0.100 -m mac --mac-source 00:50:56:12:34:56 -j ACCEPT  </span><br><span class="line">iptables -A INPUT -s 172.16.0.100 -j REJECT</span><br></pre></td></tr></table></figure></p><p>4、 string扩展<br>    对报文中的应用层数据做字符串模式匹配检测<br>    –algo {bm|kmp}：字符串匹配检测算法<br>    bm：Boyer-Moore<br>    kmp：Knuth-Pratt-Morris<br>    –from offset 开始偏移<br>    –to offset 结束偏移<br>    [!] –string pattern：要检测的字符串模式<br>    [!] –hex-string pattern：要检测字符串模式，16进制格式  </p><p> 示例：<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A OUTPUT -s 172.16.100.10 -d 0/0 -p tcp --sport 80 -m string --algo bm --string “google&quot; -j REJECT</span><br></pre></td></tr></table></figure></p><p>5、 time 扩展<br>    根据将报文到达的时间与指定的时间范围进行匹配<br>    –datestart YYYY[-MM[-DD[Thh[:mm[:ss]]]]] 日期<br>    –datestop YYYY[-MM[-DD[Thh[:mm[:ss]]]]]<br>    –timestart hh:mm[:ss] 时间<br>    –timestop hh:mm[:ss]<br>    [!] –monthdays day[,day…] 每个月的几号<br>    [!] –weekdays day[,day…] 星期几<br>   –kerneltz：内核时区，不建议使用，CentOS7系统默认为UTC<br>   注意： centos6 不支持kerneltz ，–localtz指定本地时区(默认)<br>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -s 172.16.0.0/16 -d 172.16.100.10 -p tcp --dport 80 -m time --timestart 14:30 --timestop 18:30 --weekdays Sat,Sun --kerneltz -j DROP</span><br></pre></td></tr></table></figure></p><p>6、 connlimit扩展<br>    根据每客户端IP做并发连接数数量匹配<br>    可防止CC(Challenge Collapsar挑战黑洞)攻击<br>    –connlimit-upto n：连接的数量小于等于n时匹配<br>    –connlimit-above n：连接的数量大于n时匹配<br>    通常分别与默认的拒绝或允许策略配合使用</p><p>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -d 172.16.100.10 -p tcp --dport 22 -m connlimit --connlimit-above 2 -j REJECT</span><br></pre></td></tr></table></figure></p><p>7、 limit扩展<br>    基于收发报文的速率做匹配<br>    令牌桶过滤器<br>    –limit rate[/second|/minute|/hour|/day]<br>    –limit-burst number<br>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -d 172.16.100.10 -p icmp --icmp-type 8 -m limit --limit 10/minute -- limit-burst 5 -j ACCEPT  </span><br><span class="line">iptables -I INPUT 2 -p icmp -j REJECT</span><br></pre></td></tr></table></figure></p><p>8、 state扩展<br>    状态有如下几种：<br>    NEW：新发出请求；连接追踪信息库中不存在此连接的相关信息条目，因此，将其识别为第一次发出的请求<br>    ESTABLISHED：NEW状态之后，连接追踪信息库中为其建立的条目失效之前期间内所进行的通信状态<br>    RELATED：新发起的但与已有连接相关联的连接，如：ftp协议中的数据连接与命令连接之间的关系<br>    INVALID：无效的连接，如flag标记不正确<br>    UNTRACKED：未进行追踪的连接，如raw表中关闭追踪</p><p>示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -d 172.16.1.10 -p tcp -m multiport --dports 22,80 -m state -- state NEW,ESTABLISHED -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -s 172.16.1.10 -p tcp -m multiport --sports 22,80 -m state -- state ESTABLISHED -j ACCEPT</span><br></pre></td></tr></table></figure><p>已经追踪到的并记录下来的连接信息库 /proc/net/nf_conntrack<br>调整连接追踪功能所能够容纳的最大连接数量 /proc/sys/net/nf_conntrack_max<br>不同的协议的连接追踪时长 /proc/sys/net/netfilter/<br>注意：CentOS7 需要加载模块： modprobe nf_conntrack<br>iptables的链接跟踪表最大容量为/proc/sys/net/nf_conntrack_max，各种状态的超时链接会从表中删除；当模板满载时，后续连接可能会超时解决方法两个：<br>  (1) 加大nf_conntrack_max 值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysctl.conf</span><br><span class="line">net.nf_conntrack_max = 393216</span><br><span class="line">net.netfilter.nf_conntrack_max = 393216</span><br></pre></td></tr></table></figure><p>  (2) 降低 nf_conntrack timeout时间<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysctl.conf</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_established = 300</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_time_wait = 120</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_close_wait = 60</span><br><span class="line">net.netfilter.nf_conntrack_tcp_timeout_fin_wait = 120</span><br><span class="line">iptables -t nat -L -n</span><br></pre></td></tr></table></figure></p><h3 id="开启被动模式的ftp服务"><a href="#开启被动模式的ftp服务" class="headerlink" title="开启被动模式的ftp服务"></a>开启被动模式的ftp服务</h3><h4 id="1、装载ftp连接追踪的专用模块："><a href="#1、装载ftp连接追踪的专用模块：" class="headerlink" title="1、装载ftp连接追踪的专用模块："></a>1、装载ftp连接追踪的专用模块：</h4><p>跟踪模块路径：/lib/modules/kernelversion/kernel/net/netfilter<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/iptables-config 配置文件</span><br><span class="line">IPTABLES_MODULES=&quot;nf_conntrack_ftp&quot;</span><br><span class="line">modproble nf_conntrack_ftp</span><br></pre></td></tr></table></figure></p><h4 id="2、放行请求报文："><a href="#2、放行请求报文：" class="headerlink" title="2、放行请求报文："></a>2、放行请求报文：</h4><p>命令连接：NEW, ESTABLISHED<br>数据连接：RELATED, ESTABLISHED<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables –I INPUT -d LocalIP -p tcp -m state --state ESTABLISHED,RELATED -j ACCEPT</span><br><span class="line">iptables -A INPUT -d LocalIP -p tcp --dport 21 -m state --state NEW -j ACCEPT</span><br></pre></td></tr></table></figure></p><h4 id="3、放行响应报文："><a href="#3、放行响应报文：" class="headerlink" title="3、放行响应报文："></a>3、放行响应报文：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -I OUTPUT -s LocalIP -p tcp -m state --state ESTABLISHED -j ACCEPT</span><br></pre></td></tr></table></figure><h4 id="具体命令"><a href="#具体命令" class="headerlink" title="具体命令"></a>具体命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum install vsftpd</span><br><span class="line">systemctl start vsftpd</span><br><span class="line">modprobe nf_conntrack_ftp</span><br><span class="line">iptables -F</span><br><span class="line">iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --dport 21 -m state --state NEW -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -m state --state ESTABLISHED -j ACCEPT</span><br><span class="line">iptables -P INPUT DROP</span><br><span class="line">iptables -P OUTPUT DROP</span><br><span class="line">iptables -vnL</span><br></pre></td></tr></table></figure><h4 id="规则优化"><a href="#规则优化" class="headerlink" title="规则优化"></a>规则优化</h4><blockquote><p>1、 安全放行所有入站和出站的状态为ESTABLISHED状态连接<br>2、 谨慎放行入站的新请求<br>3、 有特殊目的限制访问功能，要在放行规则之前加以拒绝<br>4、 同类规则（访问同一应用），匹配范围小的放在前面，用于特殊处理<br>5、 不同类的规则（访问不同应用），匹配范围大的放在前面<br>6、 应该将那些可由一条规则能够描述的多个规则合并为一条<br>7、 设置默认策略，建议白名单（只放行特定连接）<br>  1） iptables -P，不建议<br>  2） 建议在规则的最后定义规则做为默认策略</p></blockquote><h4 id="保存规则"><a href="#保存规则" class="headerlink" title="保存规则"></a>保存规则</h4><p>保存规则至指定的文件<br>CentOS 6<br><code>service iptables save</code><br>将规则覆盖保存至/etc/sysconfig/iptables文件中<br>CentOS 7 可用下面方法保存规则<br><code>iptables-save &gt; /PATH/TO/SOME_RULES_FILE</code></p><p>CentOS 6：<br>service iptables restart 会自动从/etc/sysconfig/iptables 重新载入规则<br>CentOS 7 重新载入预存规则文件中规则：<br><code>iptables-restore &lt; /PATH/FROM/SOME_RULES_FILE</code><br>-n, –noflush：不清除原有规则<br>-t, –test：仅分析生成规则集，但不提交</p><h4 id="开机自动重载规则文件中的规则："><a href="#开机自动重载规则文件中的规则：" class="headerlink" title="开机自动重载规则文件中的规则："></a>开机自动重载规则文件中的规则：</h4><ul><li>用脚本保存各iptables命令；让此脚本开机后自动运行<br>/etc/rc.d/rc.local文件中添加脚本路径 /PATH/TO/SOME_SCRIPT_FILE</li><li>用规则文件保存各规则，开机时自动载入此规则文件中的规则<br>/etc/rc.d/rc.local文件添加 <code>iptables-restore &lt; /PATH/FROM/IPTABLES_RULES_FILE</code></li><li>自定义Unit File，进行iptables-restore</li></ul><h3 id="网络防火墙"><a href="#网络防火墙" class="headerlink" title="网络防火墙"></a>网络防火墙</h3><h4 id="iptables-netfilter网络防火墙："><a href="#iptables-netfilter网络防火墙：" class="headerlink" title="iptables/netfilter网络防火墙："></a>iptables/netfilter网络防火墙：</h4><p>  (1) 充当网关<br>  (2) 使用filter表的FORWARD链</p><p>  注意的问题：<br>  (1) 请求-响应报文均会经由FORWARD链，要注意规则的方向性<br>  (2) 如果要启用conntrack机制，建议将双方向的状态为ESTABLISHED的报<br>文直接放行</p><h4 id="实验：实现内网ping外网，外网无法Ping内网"><a href="#实验：实现内网ping外网，外网无法Ping内网" class="headerlink" title="实验：实现内网ping外网，外网无法Ping内网"></a>实验：实现内网ping外网，外网无法Ping内网</h4><p>ip_forward功能启用</p><p>方法一：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables  -P FORWARD DROP</span><br><span class="line">iptables  -t filter -A FORWARD -s 192.168.31.0/24 -p icmp --icmp-type 8 -j ACCEPT </span><br><span class="line">iptables  -t filter -A FORWARD -d 192.168.31.0/24 -p icmp --icmp-type 0 -j ACCEPT</span><br></pre></td></tr></table></figure></p><p>方法二：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables  -A FORWARD -m state --state ESTABLISHED -j ACCEPT</span><br><span class="line">iptables  -t filter -A FORWARD -s 192.168.31.0/24 -p icmp --icmp-type 8 -j ACCEPT </span><br><span class="line">iptables -A FORWARD -j  REJECT</span><br></pre></td></tr></table></figure></p><h4 id="实验：实现从内网可访问外网，外网可访问内网的HTTP和SSH服务"><a href="#实验：实现从内网可访问外网，外网可访问内网的HTTP和SSH服务" class="headerlink" title="实验：实现从内网可访问外网，外网可访问内网的HTTP和SSH服务"></a>实验：实现从内网可访问外网，外网可访问内网的HTTP和SSH服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iptables -P FORWARD DROP</span><br><span class="line">iptables -A FORWARD  -m state --state ESTABLISHED -j ACCEPT</span><br><span class="line">iptables -A FORWARD -s 192.168.31.0/24 -m state --state NEW -j ACCEPT</span><br><span class="line">iptables -A FORWARD -d 192.168.31.0/24 -p tcp -m multiport  --dports 22,80  -m state --state NEW -j ACCEPT</span><br></pre></td></tr></table></figure><h4 id="实验：实现外网可访问内网的单个FTP服务器"><a href="#实验：实现外网可访问内网的单个FTP服务器" class="headerlink" title="实验：实现外网可访问内网的单个FTP服务器"></a>实验：实现外网可访问内网的单个FTP服务器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iptables  -P FORWARD DROP</span><br><span class="line">modprobe  nf_conntrack_ftp</span><br><span class="line">iptables -A FORWARD  -m state --state ESTABLISHED,RELATED  -j ACCEPT</span><br><span class="line">iptables -A FORWARD  -p tcp --dport 21 -d 192.168.31.17  -m state --state NEW -j ACCEPT</span><br></pre></td></tr></table></figure><h4 id="实验：实现从内网可访问外网的特定服务FTP，HTTP，HTTPS"><a href="#实验：实现从内网可访问外网的特定服务FTP，HTTP，HTTPS" class="headerlink" title="实验：实现从内网可访问外网的特定服务FTP，HTTP，HTTPS"></a>实验：实现从内网可访问外网的特定服务FTP，HTTP，HTTPS</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iptables  -P FORWARD DROP</span><br><span class="line">modprobe  nf_conntrack_ftp</span><br><span class="line">iptables -A FORWARD   -m state --state ESTABLISHED,RELATED  -j ACCEPT</span><br><span class="line">iptables -A FORWARD  -p tcp -m multiport --dports 21,80,443 -s 192.168.31.0/24 -m state --state NEW -j ACCEPT</span><br></pre></td></tr></table></figure><h4 id="实验：自定义链实现从内网可访问外网的特定服务"><a href="#实验：自定义链实现从内网可访问外网的特定服务" class="headerlink" title="实验：自定义链实现从内网可访问外网的特定服务"></a>实验：自定义链实现从内网可访问外网的特定服务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">iptables  -P FORWARD DROP</span><br><span class="line">iptables -N WEB</span><br><span class="line">iptables -A WEB -s 192.168.31.0/24 -p tcp -m multiport --dports 21,80,443,53  -j ACCEPT</span><br><span class="line">iptables -A WEB -s 192.168.31.0/24 -p udp  --dport 53  -j ACCEPT</span><br><span class="line"></span><br><span class="line">iptables -A FORWARD   -m state --state ESTABLISHED,RELATED  -j ACCEPT</span><br><span class="line">iptables -A FORWARD   -j WEB</span><br><span class="line">iptables -vnL</span><br></pre></td></tr></table></figure><p>修改自定义链，增加MYSQL的访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -R WEB 1  -p tcp -m multiport --dports 21,80,443,3306 -s 192.168.31.0/24 -j ACCEPT</span><br></pre></td></tr></table></figure><p>删除自定义链</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iptables -vnL</span><br><span class="line">iptables -D FORWARD 2</span><br><span class="line">iptables -F WEB</span><br><span class="line">iptables -X WEB</span><br></pre></td></tr></table></figure><h4 id="实验：SNAT-DNAT-端口转发"><a href="#实验：SNAT-DNAT-端口转发" class="headerlink" title="实验：SNAT DNAT 端口转发"></a>实验：SNAT DNAT 端口转发</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A POSTROUTING -s 192.168.31.0/24 -j SNAT --to-source 172.18.0.123</span><br><span class="line">iptables -t nat -A POSTROUTING -s 192.168.31.0/24  -j MASQUERADE</span><br><span class="line">iptables -t nat -A PREROUTING  -d 172.18.0.123  -p tcp --dport 80 -j DNAT --to-destination 192.168.31.17</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2018/08/27/iptables3/防火墙.jpg&quot; alt=&quot;防火墙&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://lihongda.net/categories/linux/"/>
    
    
      <category term="iptables" scheme="http://lihongda.net/tags/iptables/"/>
    
  </entry>
  
  <entry>
    <title>FTP服务</title>
    <link href="http://lihongda.net/2018/08/20/FTP%E6%9C%8D%E5%8A%A1/"/>
    <id>http://lihongda.net/2018/08/20/FTP服务/</id>
    <published>2018-08-19T16:00:00.000Z</published>
    <updated>2018-08-20T10:40:15.410Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2018/08/20/FTP服务/ftp图标.jpg" alt="ftp图标">   </p><a id="more"></a>  <h2 id="文件传输协议FTP"><a href="#文件传输协议FTP" class="headerlink" title="文件传输协议FTP"></a>文件传输协议FTP</h2><p>1、基于C/S架构<br>2、双通道协议：数据和命令连接<br>3、数据传输格式：二进制（默认）和文本<br>4、两种模式：服务器角度</p><ul><li>主动(POST style)：服务器主动连接<br>命令(控制):客户端：随机port—&gt;服务器：tcp21<br>数据:客户端:随机port&lt;—服务器:tcp20</li><li>被动(PASV style): 客户端主动连接<br>命令(控制):客户端:随机port—&gt;服务器: tcp21<br>数据:客户端：随机port—&gt;服务器:随机port    </li></ul><p>5、服务器被动模式数据端口示例：</p><ul><li>命令通道建立连接的回话中，会协商数据通道要使用的端口</li><li>227(状态码) Entering Passive Mode (ip ,224,59)<br>服务器数据端口为：224*256+59   </li></ul><h2 id="FTP软件介绍"><a href="#FTP软件介绍" class="headerlink" title="FTP软件介绍"></a>FTP软件介绍</h2><p>1、FTP服务器：</p><ul><li>Wu-ftpd,Proftpd,Pureftpd,ServU,IIS(微软)</li><li>vsftpd:Very Secure FTP Daemon,CentOS默认FTP服务器，高速而且稳定  </li></ul><p>2、客户端软件：</p><ul><li>ftp,lftp,lftpget,wget,curl</li><li>lftp -A ftpserver port -A 主动模式 -p 被动模式</li><li>lftp -u username ftpserver</li><li>lftp username@ftpserver</li><li>lftpget <a href="ftp://ftpserver/pub/file" target="_blank" rel="noopener">ftp://ftpserver/pub/file</a></li><li>filezilla(windows),CuteFTP,FlashFXP,LeapFtp</li><li>IE浏览器中输入 <a href="ftp://username:password@ftpserver" target="_blank" rel="noopener">ftp://username:password@ftpserver</a>   </li></ul><h2 id="FTP服务"><a href="#FTP服务" class="headerlink" title="FTP服务"></a>FTP服务</h2><p>1、状态码：</p><ul><li>1XX:信息             125：数据连接打开</li><li>2XX:成功类状态       200：命令OK  230：登录成功</li><li>3XX:补充类           331：用户名OK</li><li>4XX:客户端错误       425：不能打开数据连接</li><li>5XX:服务器错误       530：不能登录  </li></ul><p>2、用户认证:</p><ul><li>匿名用户：ftp,anonymous,对应Linux用户ftp</li><li>系统用户：Linux用户，用户/etc/passwd,密码/etc/shadow</li><li>虚拟用户：特定服务的专用用户，独立的用户密码文件</li><li>nsswitch:network service switch</li><li>pam:用户认证 /lib64/security /etc/pam.d/ /etc/pam.conf  </li></ul><h2 id="vsftp服务"><a href="#vsftp服务" class="headerlink" title="vsftp服务"></a>vsftp服务</h2><p>1、由vsftp包提供，不再由xinetd管理，用户认证配置文件：/etc/pam.d/vsftpd<br>2、服务脚本：/usr/lib/systemd/system/vsftpd.service,/etc/rc.d/init.d/vsftpd<br>3、配置文件：/etc/vsftpd/vsftpd.conf</p><pre><code>- 格式：option=value- 注意：= 前后不要有空格</code></pre><p>4、匿名用户（映射为系统用户ftp ）共享文件位置：/var/ftp<br>5、系统用户共享文件位置：用户家目录<br>6、虚拟用户共享文件位置：为其映射的系统用户的家目录  </p><h2 id="vsftpd服务配置"><a href="#vsftpd服务配置" class="headerlink" title="vsftpd服务配置"></a>vsftpd服务配置</h2><p>1、命令端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listen_port=21</span><br></pre></td></tr></table></figure><p>2、主动模式端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">connect_from_port_20=YES  主动模式端口为20</span><br><span class="line">ftp_data_port=20 （默认） 指定主动模式的端口</span><br></pre></td></tr></table></figure><p>3、被动模式端口范围</p><p>linux 客户端默认使用被动模式<br>windows 客户端默认使用主动模式    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pasv_min_port=6000 0为随机分配</span><br><span class="line">pasv_max_port=6010</span><br></pre></td></tr></table></figure><p>4、使用当地时间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use_localtime=YES 使用当地时间（默认为NO，使用GMT）</span><br></pre></td></tr></table></figure><p>5、匿名用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">anonymous_enable=YES               支持匿名用户</span><br><span class="line">no_anon_password=YES(默认NO)       匿名用户略过口令检查</span><br><span class="line">anon_world_readable_only (默认YES) 只能下载全部读的文件</span><br><span class="line">anon_upload_enable=YES             匿名上传，注意:文件系统权限</span><br><span class="line">anon_mkdir_write_enable=YES        匿名建目录</span><br><span class="line">anon_umask=077                     指定匿名上传文件的umask</span><br><span class="line">anon_other_write_enable=YES        可删除和修改上传的文件</span><br></pre></td></tr></table></figure><p> 指定上传文件的默认的所有者和权限  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chown_uploads=YES(默认NO)</span><br><span class="line">chown_username=wang</span><br><span class="line">chown_upload_mode=0644</span><br></pre></td></tr></table></figure><p>6、linux系统用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">guest_enable=YES            所有系统用户都映射成guest用户</span><br><span class="line">guest_username=ftp          配合上面选项才生效，指定guest用户</span><br><span class="line">local_enable=YES            是否允许linux用户登录</span><br><span class="line">write_enable-YES            允许linux用户上传文件</span><br><span class="line">local_umask=022             指定系统用户上传文件的默认权限</span><br><span class="line">local_root=/ftproot guest   用户登录所在目录</span><br></pre></td></tr></table></figure><p>7、禁锢所有系统用户在家目录中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chroot_local_user=YES（默认NO，不禁锢）禁锢系统用户</span><br></pre></td></tr></table></figure><p>8、禁锢或不禁锢特定的系统用户在家目录中，与上面设置功能相反  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chroot_list_enable=YES </span><br><span class="line">chroot_list_file=/etc/vsftpd/chroot_list</span><br><span class="line">当chroot_local_user=YES时，则chroot_list中用户不禁锢</span><br><span class="line">当chroot_local_user=NO时，则chroot_list中用户禁锢</span><br></pre></td></tr></table></figure><p>9、vsftpd日志 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dual_log_enable=YES      使用vsftpd日志格式，默认不启用 </span><br><span class="line">vsftpd_log_file=/var/log/vsftpd.log（默认）可自动生成</span><br></pre></td></tr></table></figure><p>10、登录提示信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ftpd_banner=“welcome to mage ftp server&quot;</span><br><span class="line">banner_file=/etc/vsftpd/ftpbanner.txt 优先上面项生效</span><br></pre></td></tr></table></figure><p>11、目录访问提示信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dirmessage_enable=YES (默认)</span><br><span class="line">message_file=.message   默认信息存放在指定目录下.message</span><br></pre></td></tr></table></figure><p>12、使用pam(Pluggable AuthenticationModules)完成用户认证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pam_service_name=vsftppam</span><br><span class="line">配置文件:/etc/pam.d/vsftpd/etc/vsftpd/ftpusers 默认文件中用户拒绝登录</span><br></pre></td></tr></table></figure><p>13、是否启用控制用户登录的列表文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">userlist_enable=YES                   默认有此设置</span><br><span class="line">userlist_deny=YES(默认值)             黑名单,不提示口令，NO为白名单</span><br><span class="line">userlist_file=/etc/vsftpd/users_list  此为默认值</span><br></pre></td></tr></table></figure><p>14、vsftpd服务指定用户身份运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nopriv_user=nobody (默认值)</span><br></pre></td></tr></table></figure><p>15、连接数限制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">max_clients=0                最大并发连接数</span><br><span class="line">max_per_ip=0                 每个IP同时发起的最大连接数</span><br></pre></td></tr></table></figure><p>16、传输速率：字节/秒</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">anon_max_rate=0              匿名用户的最大传输速率</span><br><span class="line">local_max_rate=0             本地用户的最大传输速率</span><br></pre></td></tr></table></figure><p>17、连接时间：秒为单位</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">connect_timeout=60           主动模式数据连接超时时长</span><br><span class="line">accept_timeout=60            被动模式数据连接超时时长</span><br><span class="line">data_connection_timeout=300  数据连接无数据输超时时长</span><br><span class="line">idle_session_timeout=60      无命令操作超时时长</span><br></pre></td></tr></table></figure><p>18、优先以文本方式传输</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ascii_upload_enable=YES</span><br><span class="line">ascii_download_enable=YES</span><br></pre></td></tr></table></figure><h2 id="实现基于SSL的FTPS"><a href="#实现基于SSL的FTPS" class="headerlink" title="实现基于SSL的FTPS"></a>实现基于SSL的FTPS</h2><p>1、 查看是否支持SSL</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldd `which vsftpd` 查看到libssl.so</span><br></pre></td></tr></table></figure><p>2、 创建自签名证书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/pki/tls/certs/</span><br><span class="line">make vsftpd.pem</span><br><span class="line">openssl x509 -in vsftpd.pem -noout –text</span><br></pre></td></tr></table></figure><p>3、 配置vsftpd服务支持SSL：/etc/vsftpd/vsftpd.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssl_enable=YES             启用SSL</span><br><span class="line">allow_anon_ssl=NO          匿名不支持SSL</span><br><span class="line">force_local_logins_ssl=YES 本地用户登录加密</span><br><span class="line">force_local_data_ssl=YES   本地用户数据传输加密</span><br><span class="line">rsa_cert_file=/etc/pki/tls/certs/vsftpd.pem</span><br></pre></td></tr></table></figure><p>4、 用filezilla等工具测试</p><h2 id="vsftpd虚拟用户"><a href="#vsftpd虚拟用户" class="headerlink" title="vsftpd虚拟用户"></a>vsftpd虚拟用户</h2><p>1、虚拟用户：</p><blockquote><p>所有虚拟用户会统一映射为一个指定的系统帐号：访问共享位置，即为此系统帐号<br>的家目录<br>各虚拟用户可被赋予不同的访问权限，通过匿名用户的权限控制参数进行指定</p></blockquote><p>2、虚拟用户帐号的存储方式：</p><blockquote><p>文件：编辑文本文件，此文件需要被编码为hash格式<br>  奇数行为用户名，偶数行为密码<br>  db_load -T -t hash -f vusers.txt vusers.db</p></blockquote><blockquote><p>关系型数据库中的表中：</p></blockquote><p>3、实时查询数据库完成用户认证</p><blockquote><p>mysql库：pam要依赖于pam-mysql<br>  /lib64/security/pam_mysql.so<br>  /usr/share/doc/pam_mysql-0.7/README</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2018/08/20/FTP服务/ftp图标.jpg&quot; alt=&quot;ftp图标&quot;&gt;   &lt;/p&gt;
    
    </summary>
    
      <category term="service" scheme="http://lihongda.net/categories/service/"/>
    
    
      <category term="ftp" scheme="http://lihongda.net/tags/ftp/"/>
    
  </entry>
  
  <entry>
    <title>iptables2</title>
    <link href="http://lihongda.net/2018/08/19/iptables2/"/>
    <id>http://lihongda.net/2018/08/19/iptables2/</id>
    <published>2018-08-18T16:00:00.000Z</published>
    <updated>2018-08-19T09:14:09.830Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2018/08/19/iptables2/防火墙.jpg" alt="防火墙"></p><a id="more"></a><h2 id="内核中数据包的传输过程"><a href="#内核中数据包的传输过程" class="headerlink" title="内核中数据包的传输过程"></a>内核中数据包的传输过程</h2><ul><li>当一个数据包进入网卡时，数据包首先进入PREROUTING链，内核根据数据包目的IP判断是否需要转送出去</li><li>如果数据包就是进入本机的，数据包就会到达INPUT链。数据包到达INPUT链后，任何进程都会收到它。本机上的程序可以发送数据包，这些数据包经过OUTPUT链，然后到达POSTROUTING链输出</li><li>如果数据包是要转发出去的，且内核允许转发，数据包就会到达FORWARD链，然后到达POSTROUTING链输出    </li></ul><h2 id="iptables规则"><a href="#iptables规则" class="headerlink" title="iptables规则"></a>iptables规则</h2><ul><li>规则rule：根据规则的匹配条件尝试匹配报文，对匹配成功的报文根据规则定义的处理动作作出处理   </li></ul><p>1、匹配条件：默认为与条件，同时满足   </p><p>基本匹配：IP,端口,TCP的Flags（SYN,ACK等）<br>扩展匹配：通过复杂高级功能匹配   </p><p>2、处理动作：称为target，跳转目标  </p><ul><li>内建处理动作：ACCEPT,DROP,REJECT,SNAT,DNATMASQUERADE,MARK,LOG…   </li><li>自定义处理动作：自定义chain，利用分类管理复杂情形  </li></ul><p>3、规则要添加在链上，才生效；添加在自定义上不会自动生效   </p><ul><li>链chain：  </li></ul><p>1、内置链：每个内置链对应于一个钩子函数<br>2、自定义链：用于对内置链进行扩展或补充，可实现更灵活的规则组织管理机制；只有Hook钩子调用自定义链时，才生效   </p><h2 id="iptables添加要点"><a href="#iptables添加要点" class="headerlink" title="iptables添加要点"></a>iptables添加要点</h2><ul><li>iptables规则添加时考量点  </li></ul><p>1、要实现那种功能：判断添加在那张表上<br>2、报文流经的路径：判断添加在哪个链上<br>3、报文的流向：判断源和目的<br>4、匹配规则：业务需要</p><ul><li>链上规则的次序，即为检查的次序，因此隐含一定的法则</li></ul><p>1、同类规则（访问同一应用），匹配范围小的放上面<br>2、不同类规则（访问不同应用），匹配到报文频率较大的放上面<br>3、将那些可由一条规则描述的多个规则合并为一个<br>4、设置默认策略</p><h3 id="避免自己定义的规则和系统默认的冲突，建议关闭系统的防火墙"><a href="#避免自己定义的规则和系统默认的冲突，建议关闭系统的防火墙" class="headerlink" title="避免自己定义的规则和系统默认的冲突，建议关闭系统的防火墙"></a>避免自己定义的规则和系统默认的冲突，建议关闭系统的防火墙</h3><p>Centos 7 系统环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systmectl stop firewalld.service        关闭防火墙</span><br><span class="line">systemctl disable firewalld.service     设置开机不启动</span><br></pre></td></tr></table></figure></p><p>Centos 6 系统环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service iptables stop       关闭防火墙</span><br><span class="line">chkconfig iptables off      设置开机不启动</span><br></pre></td></tr></table></figure></p><h2 id="iptables命令"><a href="#iptables命令" class="headerlink" title="iptables命令"></a>iptables命令</h2><h4 id="简单实例"><a href="#简单实例" class="headerlink" title="简单实例"></a>简单实例</h4><p><img src="/2018/08/19/iptables2/表规则.png" alt="表规则"></p><h4 id="规则格式"><a href="#规则格式" class="headerlink" title="规则格式"></a>规则格式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables [-t table] SUBCOMMAND chain [-m matchname [per-matchoptions]] -j targetname [per-target-options]</span><br></pre></td></tr></table></figure><h4 id="t-table-raw-mangle-nat-filter-默认"><a href="#t-table-raw-mangle-nat-filter-默认" class="headerlink" title="-t table:raw,mangle,nat,[filter]默认"></a>-t table:raw,mangle,nat,[filter]默认</h4><h4 id="链管理"><a href="#链管理" class="headerlink" title="链管理"></a>链管理</h4><blockquote><p>-N：new，自定义一条新的规则链<br>-X：delete，删除自定义的空的规则链<br>-P：Policy，设置默认策略；对filter表中的链默认为ACCEPT，可修改DROP<br>-E：重命名自定义链；引用计数不为0的自定义链不能够重命名，也不能被删除</p></blockquote><h4 id="规则查看"><a href="#规则查看" class="headerlink" title="规则查看"></a>规则查看</h4><blockquote><p>-L：list, 列出指定鏈上的所有规则，本选项须置后<br>-n：numberic，以数字格式显示地址和端口号<br>-v：verbose，详细信息<br>-vv 更详细<br>-x：exactly，显示计数器结果的精确值,而非单位转换后的易读值<br>–line-numbers：显示规则的序号<br>常用组合：–vnL;–vvnxL; –line-numbers<br>-S selected,以iptables-save 命令格式显示链上规则  </p></blockquote><h4 id="规则管理"><a href="#规则管理" class="headerlink" title="规则管理"></a>规则管理</h4><blockquote><p>-A：append，追加<br>-I：insert, 插入，要指明插入至的规则编号，默认为第一条<br>-D：delete，删除<br> (1) 指明规则序号<br> (2) 指明规则本身<br>-R：replace，替换指定链上的指定规则编号<br>-F：flush，清空指定的规则链<br>-Z：zero，置零<br> iptables的每条规则都有两个计数器<br> (1) 匹配到的报文的个数<br> (2) 匹配到的所有报文的大小之和</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2018/08/19/iptables2/防火墙.jpg&quot; alt=&quot;防火墙&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://lihongda.net/categories/linux/"/>
    
    
      <category term="iptables2" scheme="http://lihongda.net/tags/iptables2/"/>
    
  </entry>
  
  <entry>
    <title>iptables1</title>
    <link href="http://lihongda.net/2018/08/18/iptables1/"/>
    <id>http://lihongda.net/2018/08/18/iptables1/</id>
    <published>2018-08-18T10:18:39.000Z</published>
    <updated>2018-08-19T09:14:45.810Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、iptables的基本认识"><a href="#一、iptables的基本认识" class="headerlink" title="一、iptables的基本认识"></a>一、iptables的基本认识</h1><p><img src="/2018/08/18/iptables1/防火墙.jpg" alt="防火墙"></p><a id="more"></a><h3 id="1、Netfilter组件"><a href="#1、Netfilter组件" class="headerlink" title="1、Netfilter组件"></a>1、Netfilter组件</h3><ul><li>内核空间，集成在linux内核中</li><li>扩展各种网络服务的结构化底层框架</li><li>内核中选取五个位置放了五个hook(勾子) function(INPUT、OUTPUT、FORWARD、PREROUTING、POSTROUTING)，而这五个hook function向用户开放，用户可以通过一个命令工具（iptables）向其写入规则</li><li>由信息过滤表（table）组成，包含控制IP包处理的规则集（rules），规则被分组放在链（chain）上  </li></ul><h3 id="2、-三种报文流向："><a href="#2、-三种报文流向：" class="headerlink" title="2、 三种报文流向："></a>2、 三种报文流向：</h3><ul><li>流入本机：PREROUTING –&gt; INPUT–&gt;用户空间进程</li><li>流出本机：用户空间进程 –&gt;OUTPUT–&gt; POSTROUTING</li><li>转发：PREROUTING –&gt; FORWARD –&gt; POSTROUTING   </li></ul><h1 id="二、iptables的组成"><a href="#二、iptables的组成" class="headerlink" title="二、iptables的组成"></a>二、iptables的组成</h1><h3 id="1、iptables由五个表和五个链以及一些规则组成"><a href="#1、iptables由五个表和五个链以及一些规则组成" class="headerlink" title="1、iptables由五个表和五个链以及一些规则组成"></a>1、iptables由五个表和五个链以及一些规则组成</h3><ul><li>五个表table：filter、nat、mangle、raw、security</li><li>filter表:过滤规则表，根据预定义的规则过滤符合条件的数据包</li><li>nat表:network address translation 地址转换规则表</li><li>mangle:修改数据标记位规则表</li><li>Raw:关闭NAT表上启用的连接跟踪机制，加快封包穿越防火墙速度</li><li>Security：此表用于强制访问控制（MAC）网络规则，由Linux安全模块（如SELinux）实现</li><li>优先级由高到低的顺序为:security –&gt;raw–&gt;mangle–&gt;nat–&gt;filter  </li></ul><h3 id="2、五个内置链chain"><a href="#2、五个内置链chain" class="headerlink" title="2、五个内置链chain"></a>2、五个内置链chain</h3><ul><li>INPUT</li><li>OUTPUT</li><li>FORWARD</li><li>PREROUTING</li><li>POSTROUTING</li></ul><h1 id="三、Netfilter表和链对应关系"><a href="#三、Netfilter表和链对应关系" class="headerlink" title="三、Netfilter表和链对应关系"></a>三、Netfilter表和链对应关系</h1><p><img src="/2018/08/18/iptables1/表和链对应关系.jpg" alt="表和链对应关系"></p><h1 id="四、数据包过滤匹配流程"><a href="#四、数据包过滤匹配流程" class="headerlink" title="四、数据包过滤匹配流程"></a>四、数据包过滤匹配流程</h1><p><img src="/2018/08/18/iptables1/数据包过滤.jpg" alt="匹配流程图"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、iptables的基本认识&quot;&gt;&lt;a href=&quot;#一、iptables的基本认识&quot; class=&quot;headerlink&quot; title=&quot;一、iptables的基本认识&quot;&gt;&lt;/a&gt;一、iptables的基本认识&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2018/08/18/iptables1/防火墙.jpg&quot; alt=&quot;防火墙&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://lihongda.net/categories/linux/"/>
    
    
      <category term="iptables" scheme="http://lihongda.net/tags/iptables/"/>
    
  </entry>
  
</feed>
